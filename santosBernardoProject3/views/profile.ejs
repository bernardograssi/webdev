<html>

<head>
    <meta charset="utf-8">
    <title>User Profile Page</title>
    <!--JQuery-->
    <script src="https://code.jquery.com/jquery-3.4.1.js"></script>
    <!--Font-Awesome-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <!--External CSS Stylesheets-->
    <link rel="stylesheet" href="./css/navbar.css">
    <link rel="stylesheet" href="./css/style.css">
    <link rel="stylesheet" href="./css/profile.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
    <!-- Navigation Bar -->
    <nav>
        <ul>
            <img src="./images/p3-logo-transparent.png" width="70" length="70">
            <li class="logo">P#3 Social Media</li>
            <div class="dropdown">
                <li class="items">
                    <span class="icon-navbar">
                        <a href="/home"><i class="fas fa-home"></i>
                            Home</a>
                    </span>
                </li>
                <div class="dropdown-content">
                </div>
            </div>
            <div class="dropdown">
                <li class="items">
                    <span class="icon-navbar">
                        <a href="" id="account-a">
                            <i class="fas fa-user-circle"></i>
                            Account</a>
                    </span>
                </li>
                <div class="dropdown-content">
                    <a href="/profile"><i class="far fa-id-card"></i>Profile</a>
                    <a href="/friends"><i class="fas fa-users"></i>Friends</a>
                    <a href="/delete"><i class="fas fa-trash-alt"></i>Delete</a>
                    <a href="/logout"><i class="fas fa-sign-out-alt"></i>Logout</a>
                </div>
            </div>
            <li class="btn"><a href="#"><i class="fas fa-bars"></i></a></li>
        </ul>
    </nav>

    <!-- Main -->
    <main id="main" class="flexbox-col-start-center">

        <!-- Profile Page -->
        <div class="view-width">

            <!-- Profile Header -->
            <section class="profile-header">
                <div class="profile-header-inner flexbox">
                    <div class="phi-info-wrapper flexbox">
                        <div class="phi-info-left flexbox">
                            <!-- Profile Picture -->
                            <div class="phi-profile-picture-wrapper">
                                <div class="phi-profile-picture-inner flexbox">
                                    <img class="phi-profile-picture" id="profile-img-id" src="" alt="">
                                    <div class="overlay">
                                        <a href="javascript:uploadPicture()" class="icon"
                                            title="Upload New Profile Picture">
                                            <form method="post" enctype="multipart/form-data" action="">
                                                <input type="file" id="fileinput" name="file" accept="image/*"
                                                    style="display: none;">
                                                <input type="submit" id="submit" style="display:none;">
                                            </form>
                                            <i class="fas fa-arrow-up"></i>
                                        </a>
                                    </div>
                                </div>
                                <img class="phi-profile-picture-blur" src="" alt="">
                            </div>
                            <!-- Profile Username -->
                            <div class="phi-profile-username-wrapper flexbox-col-left">
                                <h3 id="phi-user" class="phi-profile-username flexbox">
                                    <%= user %>
                                </h3>
                                <p id="user-bio" class="phi-profile-tagline">Enter your bio here</p>
                            </div>
                        </div>
                        <div class="phi-info-right flexbox-right">
                            <div>
                                <button style="max-width: 200px; margin: 0 auto;" type="button"
                                    class="btn-primary-gray button btn-primary flexbox"
                                    onclick="javascript:selectText('user-bio', this)">
                                    <ion-icon name="heart-outline"></ion-icon>Edit Bio<div class="btn-secondary">
                                    </div>
                                </button>
                                <button style="margin-top: 30px;" type="button"
                                    class="btn-primary-gray button btn-primary flexbox"
                                    onclick="javascript:uploadHeader()">
                                    <ion-icon name="heart-outline"></ion-icon>Edit Header<div class="btn-secondary">
                                    </div>
                                </button>
                                <form method="post" enctype="multipart/form-data" action="">
                                    <input type="file" id="headerInput" name="file" accept="image/*"
                                        style="display: none;">
                                    <input type="submit" id="submit" style="display:none;">
                                </form>
                            </div>
                        </div>
                    </div>
                    <!-- Profile Header Image -->
                    <div class="profile-header-overlay"></div>
                    <img class="profile-header-image" id="header-img" src="" alt="">
                </div>
            </section>

            <!-- New Post -->
            <section class="profile-page">
                <h3>New Post</h3>
                <div class="profile-page-inner">
                    <div class="container">
                        <div class="wrapper">
                            <section class="post">
                                <header>Create Post</header>
                                <div class="form">
                                    <!-- Content of Profile Picture and Username -->
                                    <div class="content">
                                        <!-- Profile Picture in the New Post -->
                                        <div class="phi-profile-picture-wrapper-post">
                                            <div class="phi-profile-picture-inner flexbox">
                                                <img class="phi-profile-picture" src="" alt="">
                                            </div>
                                            <img class="phi-profile-picture-blur" src="" alt="">
                                        </div>
                                        <!-- Username -->
                                        <div class="details">
                                            <p><span id="username">
                                                    <%= user %><br>
                                                </span>
                                                <span id="datetime"></span>
                                            </p>
                                        </div>
                                    </div>

                                    <!-- Text Area of New Post -->
                                    <textarea id="new-post" maxlength="280" onkeyup="countChar(this, '0')"
                                        placeholder="Wanna share any thoughts? (Max. 280 characters)" spellcheck="false"
                                        required></textarea>
                                    <div class="charNumClass" id="charNum"></div>
                                    <button onclick="makeNewPost()">Post</button>
                                </div>
                            </section>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Profile Posts -->
            <section id="profile-page-id" class="profile-page">
                <h3>Profile Posts</h3>
                <!-- Each Post -->
                <h3 id="empty-warning">
                    You have not posted anything yet :(</h3>
            </section>

        </div>

    </main>
</body>
<script>
    var username = document.getElementById("phi-user").innerHTML.trim();
    var inputFile = document.getElementById("fileinput");
    var headerInputFile = document.getElementById("headerInput");
    var globalUserPic = document.getElementById("profile-img-id").src;
    var dt = new Date();
    var edit = true;

    document.getElementById("datetime").innerHTML = (("0" + dt.getDate()).slice(-2)) + "." + (("0" + (dt.getMonth() + 1)).slice(-2)) + "." + (dt.getFullYear()) + " " + (("0" + dt.getHours()).slice(-2)) + ":" + (("0" + dt.getMinutes()).slice(-2));

    $(document).ready(function () {

        // Assign button click3 function to navigation bar.
        $('.btn').click(function () {
            $('.items').toggleClass("show");
            $('ul li').toggleClass("hide");
        });

        // Read JSON data and build page.
        $.getJSON("./data/users.json", function (data) {
            var dataUsers = data["users"];
            var userData = '';
            for (var k = 0; k < dataUsers.length; k++) {
                if (dataUsers[k]["username"] == username) {
                    userData = dataUsers[k];
                    break;
                }
            }

            // Write bio.
            var bio = document.getElementById("user-bio");
            if (dataUsers[k]["bio"] != "") {
                bio.innerHTML = dataUsers[k]["bio"];
            }

            // Assign header picture
            document.getElementById("header-img").src = dataUsers[k]["header"];

            // Build posts and comments that have already been submitted.
            var postsNode = document.getElementById("profile-page-id");
            var numPosts = userData["posts"].length;
            var postsHTML = '';
            
            for (var m = numPosts-1; m >= 0; m--) {
                let currPost = userData["posts"][m];
                let comments = userData["posts"][m]["comments"];
                let newComments = [];

                for (var n = 0; n < comments.length; n++) {
                    newComments.push(buildCommentHTML(comments[n]));
                }

                postsHTML += buildPost(currPost["id"], currPost["pic"], currPost["user"], currPost["time"], currPost["content"], undefined, newComments);
            }

            // Write posts and comments to page.
            if (postsHTML != '') {
                postsNode.innerHTML = "<h3>Profile Posts</h3>" + postsHTML + "<h3 id='empty-warning'>End :)</h3>";
            }

            // Assign profile pictures sources.
            var profilePics = document.getElementsByClassName("phi-profile-picture");
            if (dataUsers[k]["picture"] == "") {
                for (var j = 0; j < profilePics.length; j++) {
                    if (profilePics[j].className == "phi-profile-picture") {
                        profilePics[j].src = "./images/default-user.jpg";
                    }

                }
            } else {
                for (var i = 0; i < profilePics.length; i++) {
                    if (profilePics[i].className == "phi-profile-picture") {
                        profilePics[i].src = dataUsers[k]["picture"];
                    }

                }
            }

        }).fail(function () {

        });

    });

    function urlify(text) {
        var urlRegex = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
        return text.replace(urlRegex, function (url) {
            return '<a href="' + url + '">' + url + '</a>';
        });
    }

    function storePostInDB(theDate, theContent, theYTFrame, theID) {
        $.getJSON("./data/users.json", function (data) {
            var dataUsers = data["users"];
            var userData = '';
            for (var k = 0; k < dataUsers.length; k++) {
                if (dataUsers[k]["username"] == username) {
                    userData = dataUsers[k];
                    break;
                }
            }

            // Get all the posts from user and append new post.
            dataUsers[k]["posts"].push(
                {
                    "id": theID,
                    "content": theContent + theYTFrame,
                    "user": userData["username"],
                    "time": theDate,
                    "pic": userData["picture"],
                    "comments": []
                }
            )

            $.ajax
                ({
                    type: "POST",
                    url: '/savePost',
                    data: JSON.stringify({ "data": dataUsers }),
                    contentType: "application/json",
                    dataType: "json",
                    success: function () { console.log("Successful insertion to posts JSON."); },
                    failure: function () { console.log("Error when inserting to posts JSON."); }
                });

        }).fail(function () {
            console.log("Pushing new post to DB failed!");
        });
    }

    function storeCommentInDB(theID, theUser, theContent) {
        $.getJSON("./data/users.json", function (data) {
            var dataUsers = data["users"];
            var userData = '';
            for (var k = 0; k < dataUsers.length; k++) {
                if (dataUsers[k]["username"] == username) {
                    userData = dataUsers[k];
                    break;
                }
            }

            var posts = userData["posts"];
            for (var i = 0; i < posts.length; i++) {
                if (posts[i]["id"] == theID) {
                    dataUsers[k]["posts"][i]["comments"].push(
                        {
                            "user": theUser,
                            "content": theContent
                        }
                    )
                }
            }

            console.log(dataUsers);

            $.ajax
                ({
                    type: "POST",
                    url: '/saveComment',
                    data: JSON.stringify({ "data": dataUsers }),
                    contentType: "application/json",
                    dataType: "json",
                    success: function () { console.log("Successful insertion to comments JSON."); },
                    failure: function () { console.log("Error when inserting to comments JSON."); }
                });

        }).fail(function () {
            console.log("Pushing new comment to DB failed!");
        });

    }

    function uuidv4() {
        return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
            (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
        );
    }

    function buildPost(theID, theProfilePicSrc, theUser, theDate, theContent, theYTFrame, theComments) {
        let oldComment = theComments != [] ? (theComments).join("") : '';
        theYTFrame = theYTFrame === undefined ? '' : theYTFrame;

        return `
            <div class="post-page-inner" id="post-` + theID + `">
                        <div class="profile-page-post-inner">
                            <!-- Post Header -->
                            <div class="post-header">
                                <div style="margin: 80px 20px" class="content">
                                        <!-- Profile Picture in the New Post -->
                                        <div class="phi-profile-picture-wrapper-post">
                                            <div class="phi-profile-picture-inner flexbox">
                                                <img class="phi-profile-picture" src="` + theProfilePicSrc + `" alt="">
                                            </div>
                                        </div>
                                        <!-- Username -->
                                        <div style="margin-left: 10px;" class="details">
                                            <p><span id="username">
                                                    ` + theUser + `
                                                </span><br>
                                                <span id="datetime">` + theDate + `</span>
                                            </p>
                                        </div>
                                </div>
                                <div class="post-content"><p>` + theContent + theYTFrame + `</p></div>
                            </div>
                            <br>
                            <hr>
                            <!-- Post Comments -->
                            <div class="post-comments">
                                <div class="form">
                                    <p>Add comment:</p>
                                    <textarea class="new-comment" id="new-comment-` + theID + `" maxlength="280" onkeyup="countChar(this, '` + theID + `')"
                                        placeholder="Wanna comment? (Max. 280 characters)" spellcheck="false"
                                        required></textarea>
                                    <div class="charNumClass" id="charNum` + theID + `"></div>
                                    <button class="submit-comment" type="submit" onclick="postComment('` + theID + `')">Comment</button>
                                </div>
                            </div>
                            <br>
                            <hr>
                            <!-- Old Comments -->
                            <div id="old-comments-` + theID + `" class="old-comments">
                                <p>Past comments:</p>
                                <br>` + oldComment + `
                            </div>
                        </div>
                    </div>`;
    }

    function buildCommentHTML(comment) {
        let user = comment["user"];
        let content = comment["content"];

        return "<span class='an-old-comment'><p><b><i>" + user + ": </i></b>" + content + "</p></span><br>";
    }

    function selectText(id, element) {
        var sel, range;
        var el = document.getElementById(id); //get element id

        // If user clicks 'Edit Bio', then select all text in the bio so that the user can edit it and change button text to 'Save Bio'.
        if (edit) {
            edit = false;
            el.setAttribute("contentEditable", "true");
            element.innerHTML = "<ion-icon name='heart-outline'></ion-icon>Save Bio<div class='btn-secondary'></div>";

            if (window.getSelection && document.createRange) { //Browser compatibility
                sel = window.getSelection();
                if (sel.toString() == '') { //no text selection
                    window.setTimeout(function () {
                        range = document.createRange(); //range object
                        range.selectNodeContents(el); //sets Range
                        sel.removeAllRanges(); //remove all ranges from selection
                        sel.addRange(range);//add Range to a Selection.
                    }, 1);
                }
            } else if (document.selection) { //older ie
                sel = document.selection.createRange();
                if (sel.text == '') { //no text selection
                    range = document.body.createTextRange();//Creates TextRange object
                    range.moveToElementText(el);//sets Range
                    range.select(); //make selection.
                }
            }
        }

        // If user clicks 'Save Bio', then save bio to database and change button to 'Edit Bio'.
        else {
            edit = true;
            el.setAttribute("contentEditable", "false");
            element.innerHTML = "<ion-icon name='heart-outline'></ion-icon>Edit Bio<div class='btn-secondary'></div>";

            // Save new bio to database
            $.getJSON("./data/users.json", function (data) {
                var dataUsers = data["users"];
                var userData = '';
                for (var k = 0; k < dataUsers.length; k++) {
                    if (dataUsers[k]["username"] == username) {
                        userData = dataUsers[k];
                        break;
                    }
                }

                dataUsers[k]["bio"] = document.getElementById("user-bio").innerHTML;

                $.ajax
                    ({
                        type: "POST",
                        url: '/saveBio',
                        data: JSON.stringify({ "data": dataUsers }),
                        contentType: "application/json",
                        dataType: "json",
                        success: function () { console.log("Successful insertion to bio JSON."); },
                        failure: function () { console.log("Error when inserting to bio JSON."); }
                    });


            }).fail(function () {
                console.log("error saving bio from client side");
            });
        }

    }

    function countChar(val, num) {
        var len = val.value.length;
        if (len >= 280) {
            val.value = val.value.substring(0, 280);
        } else {
            if (num == '0') {
                $('#charNum').text(280 - len);
            } else {
                $('#charNum' + num).text(280 - len);
            }
        }
    };

    function getYouTubeId(url) {
        var regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
        var match = url.match(regExp);

        if (match && match[2].split(" ")[0].length == 11) {
            return match[2].split(" ")[0];
        } else {
            return 'error';
        }
    };

    function postFormatYouTube() {
        var textContent = String(document.getElementById("new-post").value);
        var ytPattern = /(https?\:\/\/)?((www\.)?youtube\.com|youtu\.?be)\/.+/;
        var finalLink = '';

        if (ytPattern.test(textContent)) {
            var ytDefault = "<iframe width='400' height='215' src='https://www.youtube.com/embed/$ID$' title='YouTube Video Player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>";
            var ytLink = textContent.match(ytPattern)[0];
            var placeholders = ytDefault.match(/\$(.*?)\$/g);

            placeholders.forEach(function (placeholder) {
                //Placeholder - $Name$
                var phText = placeholder.substring(1, placeholder.length - 1);

                if (getYouTubeId(textContent) != 'error') {
                    finalLink = ytDefault.replace(placeholder, getYouTubeId(textContent))
                }
            });

        }

        return finalLink;
    }

    function makeNewPost() {
        var ytFrame = postFormatYouTube();
        var postHeader = "<h3>Profile Posts</h3>";
        var postsNode = document.getElementById("profile-page-id");
        var postContent = document.getElementById("new-post").value;
        var postDate = document.getElementById("datetime").innerHTML;
        var postsHTML = document.getElementById("profile-page-id").innerHTML;
        var uniqueID = uuidv4();
        var userProfilePicSrc = document.getElementById("profile-img-id").src;
        var user = document.getElementById("phi-user").innerHTML;
        var newPostHTML = buildPost(uniqueID, userProfilePicSrc, user, postDate, urlify(postContent), ytFrame, []);
    
        postsNode.innerHTML = postsNode.innerHTML.replace("<h3>Profile Posts</h3>", postHeader + newPostHTML);
        document.getElementById("new-post").value = '';
        document.getElementById("new-post").placeholder = "Wanna share any thoughts? (Max. 280 characters)";
        document.getElementById("empty-warning").innerHTML = "End :)";
        document.getElementById("charNum").innerHTML = "280";

        // Store the new post in the JSON database.
        storePostInDB(postDate, postContent, ytFrame, uniqueID);
    }

    function postComment(uniqueID) {
        var textComment = document.getElementById("new-comment-" + uniqueID).value;
        var oldComments = document.getElementById("old-comments-" + uniqueID);

        oldComments.innerHTML += "<span class='an-old-comment'><p><b><i>" + username + ": </i></b>" + textComment + "</p></span><br>";
        document.getElementById("new-comment-" + uniqueID).value = '';
        document.getElementById("new-comment-" + uniqueID).placeholder = 'Wanna comment? (Max. 280 characters)';
        document.getElementById("charNum" + uniqueID).innerHTML = "280";

        // Store new comment in JSON database.
        storeCommentInDB(uniqueID, username, textComment);
    }

    function uploadPicture() {
        inputFile.click();
    }

    function uploadHeader() {
        headerInputFile.click();
    }

    const b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {
        const byteCharacters = atob(decodeURIComponent(b64Data));
        const byteArrays = [];

        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            const slice = byteCharacters.slice(offset, offset + sliceSize);

            const byteNumbers = new Array(slice.length);
            for (let i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            const byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }

        const blob = new Blob(byteArrays, { type: contentType });
        return blob;
    }

    function getBase64Profile(file, type) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {

            var image = reader.result;
            var base64ImageContent = image.replace(/^data:image\/(png|jpg|jpeg);base64,/, "");
            var blob = b64toBlob(base64ImageContent, 'image/png');
            var formData = new FormData();
            formData.append('picture', blob);

            $.ajax({
                url: "/upload",
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                data: formData
            })
                .done(function (e) {
                    alert('Profile picture has been successfully updated!');
                });

        };
        reader.onerror = function (error) {
            console.log('Error: ', error);
        };
    }

    function getBase64Header(file, type) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {

            var image = reader.result;
            var base64ImageContent = image.replace(/^data:image\/(png|jpg|jpeg);base64,/, "");
            var blob = b64toBlob(base64ImageContent, 'image/png');
            var formData = new FormData();
            formData.append('picture', blob);

            $.ajax({
                url: "/uploadHeader",
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                data: formData
            })
                .done(function (e) {
                    alert('Header picture has been successfully updated!');
                });

        };
        reader.onerror = function (error) {
            console.log('Error: ', error);
        };
    }

    inputFile.addEventListener("change", function () {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementsByClassName('phi-profile-picture');
            for (var k = 0; k < output.length; k++) {
                output[k].src = reader.result;
            }
        };
        reader.readAsDataURL(event.target.files[0]);

        // Upload file to server
        const file = event.target.files[0];
        var type = String(file["type"]).split("/")[1];
        getBase64Profile(file, type);

    });

    headerInputFile.addEventListener("change", function () {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('header-img');
            output.src = reader.result;

        };
        reader.readAsDataURL(event.target.files[0]);

        // Upload file to server
        const file = event.target.files[0];
        var type = String(file["type"]).split("/")[1];
        getBase64Header(file, type);

    });

</script>

</html>